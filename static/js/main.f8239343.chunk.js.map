{"version":3,"sources":["Objects/StaticText.ts","Objects/StaticVector.ts","Objects/StaticImage.ts","Objects/image-loader.ts","editor.js","App.js","index.js"],"names":["StaticTextObject","options","text","textOptions","this","propertiesToInclude","callback","fabric","StaticText","Textbox","type","util","createClass","fromObject","SvgObject","src","objects","others","set","object","groupSVGElements","Group","Svg","StaticImageObject","subtype","element","loadImage","img","StaticImage","crossOrigin","Image","loadImageFromURL","Promise","resolve","image","onload","Editor","props","onHandleKeyDown","event","which","deleteActiveObject","addText","state","canvas","add","IText","fontFamily","fill","color","fontSize","padding","left","right","addBackground","url","removeBackground","fromURL","setBackgroundImage","renderAll","scaleX","width","scaleY","height","setState","backgroundImage","console","log","getObjects","onColorChange","backgroundColor","hex","textColorChange","e","getActiveObject","target","value","textBgColorChange","onBold","checked","onItalic","onUnderline","onLinethrough","onOverline","onFontSize","onImageChange","URL","createObjectURL","files","getActiveObjects","forEach","remove","download","toDataURL","format","quality","href","addTemplate","a","clear","template","background","importTemplate","item","staticText","staticImage","reject","baseOptions","getBaseOptions","metadata","oldCanvasWidth","newCanvasWidth","textAlign","fontWeight","charSpacing","lineheight","err","canvasScale","zoomToPercent","percentage","Number","setCanvasSize","zoomIn","zoomOut","setHeight","getHeight","setWidth","getWidth","i","top","tempScaleX","tempScaleY","tempLeft","tempTop","setCoords","container","React","createRef","current","clientHeight","clientWidth","Canvas","preserveObjectStacking","document","addEventListener","angle","originX","originY","oldCanvasHeight","newCanvasHeight","push","textBox","id","onClick","size","onChange","name","min","max","step","className","for","accept","style","border","margin","ref","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8239343.chunk.js","sourcesContent":["//@ts-nocheck\r\n\r\nimport { fabric } from \"fabric\";\r\n\r\nexport class StaticTextObject extends fabric.Textbox {\r\n  static type = \"StaticText\";\r\n\r\n  initialize(options: StaticTextOptions) {\r\n    const { text, ...textOptions } = options;\r\n    //@ts-ignore\r\n    super.initialize(text, textOptions);\r\n\r\n    return this;\r\n  }\r\n  toObject(propertiesToInclude = []) {\r\n    return super.toObject(propertiesToInclude);\r\n  }\r\n  toJSON(propertiesToInclude = []) {\r\n    return super.toObject(propertiesToInclude);\r\n  }\r\n  static fromObject(options: StaticTextOptions, callback: Function) {\r\n    return callback && callback(new fabric.StaticText(options));\r\n  }\r\n}\r\n\r\nfabric.StaticText = fabric.util.createClass(StaticTextObject, {\r\n  type: StaticTextObject.type\r\n});\r\nfabric.StaticText.fromObject = StaticTextObject.fromObject;\r\n\r\nexport type StaticTextOptions = fabric.ITextboxOptions & { text: string };\r\n\r\ndeclare module \"fabric\" {\r\n  namespace fabric {\r\n    class StaticText extends StaticTextObject {\r\n      constructor(options: StaticTextOptions);\r\n    }\r\n  }\r\n}\r\n","//@ts-nocheck\r\nimport { fabric } from \"fabric\";\r\n\r\nclass SvgObject extends fabric.Group {\r\n  static type = \"StaticVector\";\r\n  public src: string;\r\n  //@ts-ignore\r\n  initialize(objects, options, others) {\r\n    this.set(\"src\", others.src);\r\n    const object = fabric.util.groupSVGElements(objects, options);\r\n    //@ts-ignore\r\n    super.initialize([object], others);\r\n    return this;\r\n  }\r\n\r\n  toObject(propertiesToInclude = []) {\r\n    // @ts-ignore\r\n    return super.toObject(propertiesToInclude, {\r\n      src: this.src\r\n    });\r\n  }\r\n  toJSON(propertiesToInclude = []) {\r\n    // @ts-ignore\r\n    return super.toObject(propertiesToInclude, {\r\n      src: this.src\r\n    });\r\n  }\r\n}\r\n\r\nfabric.Svg = fabric.util.createClass(SvgObject, {\r\n  type: SvgObject.type\r\n});\r\n\r\nexport type SvgOptions = fabric.Group & { text: string };\r\n\r\ndeclare module \"fabric\" {\r\n  namespace fabric {\r\n    class Svg extends SvgObject {\r\n      constructor(objects: any, options: any, others: any);\r\n    }\r\n  }\r\n}\r\n\r\nexport default SvgObject;\r\n","//@ts-nocheck\r\n\r\nimport { fabric } from \"fabric\";\r\n\r\nexport class StaticImageObject extends fabric.Image {\r\n  static type = \"StaticImage\";\r\n  subtype = \"image\";\r\n  //@ts-ignore\r\n  initialize(element, options) {\r\n    this.subtype = options.subtype;\r\n    // this.set('crossOrigin', 'anonymous')\r\n    //@ts-ignore\r\n    super.initialize(element, options);\r\n    return this;\r\n  }\r\n\r\n  static fromObject(options, callback) {\r\n    fabric.util.loadImage(\r\n      options.src,\r\n      function (img) {\r\n        // @ts-ignore\r\n        return callback && callback(new fabric.StaticImage(img, options));\r\n      },\r\n      null,\r\n      // @ts-ignore\r\n      { crossOrigin: \"anonymous\" }\r\n    );\r\n  }\r\n\r\n  toObject(propertiesToInclude = []) {\r\n    // @ts-ignore\r\n    return super.toObject(propertiesToInclude, {\r\n      subtype: this.subtype\r\n    });\r\n  }\r\n  toJSON(propertiesToInclude = []) {\r\n    // @ts-ignore\r\n    return super.toObject(propertiesToInclude, {\r\n      subtype: this.subtype\r\n    });\r\n  }\r\n}\r\n\r\nfabric.StaticImage = fabric.util.createClass(StaticImageObject, {\r\n  type: StaticImageObject.type\r\n});\r\nfabric.StaticImage.fromObject = StaticImageObject.fromObject;\r\n\r\nexport interface StaticImageOptions extends fabric.IImageOptions {\r\n  id: string;\r\n  name?: string;\r\n  description?: string;\r\n  subtype: string;\r\n  src: string;\r\n}\r\n\r\ndeclare module \"fabric\" {\r\n  namespace fabric {\r\n    class StaticImage extends StaticImageObject {\r\n      constructor(element: any, options: any);\r\n    }\r\n  }\r\n}\r\n","//@ts-nocheck\r\nimport { fabric } from \"fabric\";\r\n\r\nexport function loadFabricImageFromURL(src) {\r\n  return new Promise((resolve) => {\r\n    fabric.Image.fromURL(src, function (img) {\r\n      resolve(img);\r\n    });\r\n  });\r\n}\r\n\r\nexport function loadImageFromURL(src): Promise<Image> {\r\n  return new Promise((resolve) => {\r\n    const image = new Image();\r\n    image.src = src;\r\n    image.crossOrigin = \"Anonymous\";\r\n    image.onload = () => {\r\n      resolve(image);\r\n    };\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { TwitterPicker } from \"react-color\";\r\nimport template from \"./temp\";\r\nimport StaticText from \"./Objects/StaticText\";\r\nimport StaticVector from \"./Objects/StaticVector\";\r\nimport StaticImage from \"./Objects/StaticImage\";\r\nimport { loadImageFromURL } from \"./Objects/image-loader\";\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canvas: null,\r\n      backgroundColor: \"#FDEFEF\",\r\n      fontSize: \"24\",\r\n      href: \"\",\r\n      color: \"#000000\",\r\n      canvasScale: 1,\r\n      backgroundImage: \"\"\r\n    };\r\n    this.container = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const container = this.container.current;\r\n    const { clientHeight, clientWidth } = container;\r\n\r\n    const canvas = new fabric.Canvas(\"canvas\", {\r\n      backgroundColor: \"#FDEFEF\",\r\n      height: clientHeight,\r\n      width: clientWidth,\r\n      preserveObjectStacking: true\r\n    });\r\n\r\n    this.setState({ canvas });\r\n\r\n    document.addEventListener(\"keydown\", this.onHandleKeyDown);\r\n  }\r\n\r\n  onHandleKeyDown = (event) => {\r\n    if (event.which === 46) {\r\n      this.deleteActiveObject();\r\n    }\r\n  };\r\n\r\n  addText = () => {\r\n    const { canvas } = this.state;\r\n    canvas.add(\r\n      new fabric.IText(\"Tap and Type\", {\r\n        fontFamily: \"arial\",\r\n        fill: this.state.color,\r\n        fontSize: 29,\r\n        padding: 5,\r\n        left: 0,\r\n        right: 0\r\n      })\r\n    );\r\n  };\r\n\r\n  addBackground = (url) => {\r\n    const { canvas } = this.state;\r\n    this.removeBackground();\r\n\r\n    fabric.Image.fromURL(\r\n      url,\r\n      (img) => {\r\n        if (canvas) {\r\n          canvas.setBackgroundImage(\r\n            img,\r\n            () => {\r\n              canvas.renderAll();\r\n            },\r\n            {\r\n              scaleX: canvas.width / img.width,\r\n              scaleY: canvas.height / img.height\r\n            }\r\n          );\r\n        }\r\n      },\r\n      { crossOrigin: \"anonymous\" }\r\n    );\r\n    this.setState({ backgroundImage: url });\r\n  };\r\n\r\n  removeBackground = () => {\r\n    const { canvas } = this.state;\r\n    this.setState({ backgroundImage: \"\" });\r\n    if (canvas.backgroundImage) {\r\n      canvas.setBackgroundImage(null);\r\n      canvas.renderAll();\r\n    }\r\n    console.log(canvas.getObjects());\r\n  };\r\n\r\n  onColorChange = (color) => {\r\n    const { canvas } = this.state;\r\n    this.removeBackground();\r\n    if (canvas) {\r\n      canvas.backgroundColor = color.hex;\r\n      canvas.renderAll();\r\n    }\r\n  };\r\n  textColorChange = (e) => {\r\n    const { canvas } = this.state;\r\n    if (canvas.getActiveObject()) {\r\n      canvas.getActiveObject().set(\"fill\", e.target.value);\r\n      canvas.renderAll();\r\n    }\r\n    this.setState({ color: e.target.value });\r\n  };\r\n\r\n  textBgColorChange = (e) => {\r\n    const { canvas } = this.state;\r\n    if (canvas.getActiveObject()) {\r\n      canvas.getActiveObject().set(\"backgroundColor\", e.target.value);\r\n      canvas.renderAll();\r\n    }\r\n  };\r\n\r\n  onBold = (e) => {\r\n    const { canvas } = this.state;\r\n    if (e.target.checked) {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"fontWeight\", \"bold\");\r\n        canvas.renderAll();\r\n      }\r\n    } else {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"fontWeight\", \"\");\r\n        canvas.renderAll();\r\n      }\r\n    }\r\n  };\r\n\r\n  onItalic = (e) => {\r\n    const { canvas } = this.state;\r\n    if (e.target.checked) {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"fontStyle\", \"italic\");\r\n        canvas.renderAll();\r\n      }\r\n    } else {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"fontStyle\", \"\");\r\n        canvas.renderAll();\r\n      }\r\n    }\r\n  };\r\n\r\n  onUnderline = (e) => {\r\n    const { canvas } = this.state;\r\n    if (e.target.checked) {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"underline\", true);\r\n        canvas.renderAll();\r\n      }\r\n    } else {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"underline\", false);\r\n        canvas.renderAll();\r\n      }\r\n    }\r\n  };\r\n\r\n  onLinethrough = (e) => {\r\n    const { canvas } = this.state;\r\n    if (e.target.checked) {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"linethrough\", true);\r\n        canvas.renderAll();\r\n      }\r\n    } else {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"linethrough\", false);\r\n        canvas.renderAll();\r\n      }\r\n    }\r\n  };\r\n\r\n  onOverline = (e) => {\r\n    const { canvas } = this.state;\r\n    if (e.target.checked) {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"overline\", true);\r\n        canvas.renderAll();\r\n      }\r\n    } else {\r\n      if (canvas.getActiveObject()) {\r\n        canvas.getActiveObject().set(\"overline\", false);\r\n        canvas.renderAll();\r\n      }\r\n    }\r\n  };\r\n\r\n  onFontSize = (e) => {\r\n    const { canvas } = this.state;\r\n    if (canvas.getActiveObject()) {\r\n      canvas.getActiveObject().set(\"fontSize\", e.target.value);\r\n      canvas.renderAll();\r\n    }\r\n    this.setState({ fontSize: e.target.value });\r\n  };\r\n\r\n  onImageChange = (e) => {\r\n    const { canvas } = this.state;\r\n    var url = URL.createObjectURL(e.target.files[0]);\r\n    fabric.Image.fromURL(\r\n      url,\r\n      (img) => {\r\n        canvas.add(img);\r\n        canvas.renderAll();\r\n      },\r\n      { scaleX: 0.15, scaleY: 0.15 }\r\n    );\r\n    console.log(canvas.getObjects());\r\n  };\r\n\r\n  deleteActiveObject = () => {\r\n    const { canvas } = this.state;\r\n\r\n    canvas.getActiveObjects().forEach((object) => {\r\n      canvas.remove(object);\r\n    });\r\n  };\r\n\r\n  download = (e) => {\r\n    const { canvas } = this.state;\r\n    const image = canvas.toDataURL({\r\n      format: \"png\",\r\n      quality: 1\r\n    });\r\n    this.setState({ href: image });\r\n  };\r\n\r\n  addTemplate = async () => {\r\n    const { canvas } = this.state;\r\n    canvas.clear();\r\n    if (canvas) {\r\n      canvas.backgroundColor = template.background.value;\r\n      canvas.renderAll();\r\n    }\r\n    for (const object of template.objects) {\r\n      const element = await this.importTemplate(object);\r\n      if (element) {\r\n        canvas.add(element);\r\n        canvas.renderAll();\r\n      } else {\r\n        console.log(\"UNABLE TO LOAD OBJECT: \", object.type);\r\n      }\r\n    }\r\n  };\r\n  importTemplate = async (item) => {\r\n    let object;\r\n    switch (item.type) {\r\n      case \"StaticText\":\r\n        object = await this.staticText(item);\r\n        break;\r\n      case \"StaticImage\":\r\n        object = await this.staticImage(item);\r\n        break;\r\n    }\r\n    return object;\r\n  };\r\n\r\n  staticText = (item) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const baseOptions = this.getBaseOptions(item, \"text\");\r\n        const metadata = item.metadata;\r\n        const oldCanvasWidth = item.canvas.width;\r\n        const newCanvasWidth = this.state.canvas.width;\r\n        const {\r\n          textAlign,\r\n          fontFamily,\r\n          fontSize,\r\n          fontWeight,\r\n          charSpacing,\r\n          lineheight,\r\n          text,\r\n          padding\r\n        } = metadata;\r\n        const textOptions = {\r\n          ...baseOptions,\r\n          text: text ? text : \"Default Text\",\r\n          ...(textAlign && { textAlign }),\r\n          ...(fontFamily && { fontFamily }),\r\n          ...(fontSize && {\r\n            fontSize: (fontSize * newCanvasWidth) / oldCanvasWidth\r\n          }),\r\n          ...(fontWeight && { fontWeight }),\r\n          ...(charSpacing && { charSpacing }),\r\n          ...(lineheight && { lineheight }),\r\n          ...(padding && { padding })\r\n        };\r\n        const element = new fabric.StaticText(textOptions);\r\n        resolve(element);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  staticImage = (item) => {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const baseOptions = this.getBaseOptions(item, \"img\");\r\n        const src = item.metadata.src;\r\n        const image = await loadImageFromURL(src);\r\n        console.log(this.state.canvasScale);\r\n        const { width, height } = baseOptions;\r\n        if (!width || !height) {\r\n          baseOptions.width = image.width;\r\n          baseOptions.height = image.height;\r\n        }\r\n        const element = new fabric.StaticImage(image, baseOptions);\r\n\r\n        resolve(element);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    });\r\n  };\r\n\r\n  getBaseOptions(item, type) {\r\n    const { left, top, width, height, scaleX, scaleY } = item;\r\n    let metadata = item.metadata ? item.metadata : {};\r\n    const { fill, angle, originX, originY } = metadata;\r\n    const oldCanvasWidth = item.canvas.width;\r\n    const oldCanvasHeight = item.canvas.height;\r\n    const newCanvasWidth = this.state.canvas.width;\r\n    const newCanvasHeight = this.state.canvas.height;\r\n\r\n    let baseOptions = {\r\n      angle: angle ? angle : 0,\r\n      top: top ? (top * newCanvasWidth) / oldCanvasWidth : 0,\r\n      left: left ? (left * newCanvasWidth) / oldCanvasWidth : 0,\r\n      width: type === \"img\" ? width : (width * newCanvasWidth) / oldCanvasWidth,\r\n      height:\r\n        type === \"img\" ? height : (height * newCanvasHeight) / oldCanvasHeight,\r\n      originX: originX || \"left\",\r\n      originY: originY || \"top\",\r\n      scaleX: (scaleX * newCanvasWidth) / oldCanvasWidth || 1,\r\n      scaleY: (scaleY * newCanvasWidth) / oldCanvasWidth || 1,\r\n      fill: fill || \"#000000\",\r\n      metadata: metadata\r\n    };\r\n    return baseOptions;\r\n  }\r\n  zoomToPercent = (event) => {\r\n    var percentage = Number(event.target.value) / 100;\r\n    this.setCanvasSize(percentage);\r\n  };\r\n  zoomIn = () => {\r\n    if (this.state.canvasScale < 4) {\r\n      const percentage = this.state.canvasScale + 0.25;\r\n      this.setCanvasSize(percentage);\r\n    }\r\n  };\r\n\r\n  // Zoom Out\r\n  zoomOut = () => {\r\n    if (this.state.canvasScale > 0.25) {\r\n      const percentage = this.state.canvasScale - 0.25;\r\n      this.setCanvasSize(percentage);\r\n    }\r\n  };\r\n\r\n  setCanvasSize = (percentage) => {\r\n    var canvas = this.state.canvas;\r\n\r\n    canvas.setHeight(\r\n      canvas.getHeight() * (percentage / this.state.canvasScale)\r\n    );\r\n    canvas.setWidth(canvas.getWidth() * (percentage / this.state.canvasScale));\r\n    const objects = canvas.getObjects();\r\n\r\n    for (var i in objects) {\r\n      const scaleX = objects[i].scaleX;\r\n      const scaleY = objects[i].scaleY;\r\n      const left = objects[i].left;\r\n      const top = objects[i].top;\r\n      const tempScaleX = scaleX * (percentage / this.state.canvasScale);\r\n      const tempScaleY = scaleY * (percentage / this.state.canvasScale);\r\n      const tempLeft = left * (percentage / this.state.canvasScale);\r\n      const tempTop = top * (percentage / this.state.canvasScale);\r\n      objects[i].scaleX = tempScaleX;\r\n      objects[i].scaleY = tempScaleY;\r\n      objects[i].left = tempLeft;\r\n      objects[i].top = tempTop;\r\n      objects[i].setCoords();\r\n    }\r\n    this.addBackground(this.state.backgroundImage);\r\n    this.setState({ canvasScale: percentage });\r\n    canvas.renderAll();\r\n  };\r\n\r\n  render() {\r\n    let options = [];\r\n    for (let i = 1; i < 17; i++) {\r\n      options.push(\r\n        <option key={i} value={i * 25}>\r\n          {i * 25}%\r\n        </option>\r\n      );\r\n      console.log(this.state.textBox);\r\n    }\r\n    return (\r\n      <div id=\"Canvas\">\r\n        <button onClick={this.addText}>Add Text </button>\r\n        <div>\r\n          <label>Text color </label>\r\n          <input\r\n            type=\"color\"\r\n            value={this.state.color}\r\n            size=\"10\"\r\n            onChange={(e) => this.textColorChange(e)}\r\n          />{\" \"}\r\n          <label>Background text color:</label>\r\n          <input\r\n            type=\"color\"\r\n            value=\"\"\r\n            size=\"10\"\r\n            onChange={(e) => this.textBgColorChange(e)}\r\n          />\r\n          <div>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"fonttype\"\r\n              onChange={(e) => {\r\n                this.onBold(e);\r\n              }}\r\n            />\r\n            Bold\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"fonttype\"\r\n              onChange={(e) => {\r\n                this.onItalic(e);\r\n              }}\r\n            />\r\n            Italic\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"fonttype\"\r\n              onChange={(e) => {\r\n                this.onUnderline(e);\r\n              }}\r\n            />\r\n            Underline\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"fonttype\"\r\n              onChange={(e) => {\r\n                this.onLinethrough(e);\r\n              }}\r\n            />\r\n            Linethrough\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"fonttype\"\r\n              onChange={(e) => {\r\n                this.onOverline(e);\r\n              }}\r\n            />\r\n            Overline\r\n          </div>\r\n          <div>\r\n            <label>Font size</label>\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"120\"\r\n              step=\"1\"\r\n              value={this.state.fontSize}\r\n              onChange={(e) => this.onFontSize(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={() =>\r\n            this.addBackground(\r\n              \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\"\r\n            )\r\n          }\r\n        >\r\n          Add Background Image{\" \"}\r\n        </button>{\" \"}\r\n        <button onClick={this.removeBackground}>Remove Background </button>\r\n        <div>\r\n          <button onClick={this.addTemplate}>Add Template</button>\r\n        </div>\r\n        <div>\r\n          <label>Zoom </label>\r\n          <button onClick={this.zoomOut}>-</button>\r\n          <select\r\n            className=\"zoom\"\r\n            onChange={this.zoomToPercent}\r\n            value={this.state.canvasScale * 100}\r\n          >\r\n            {options}\r\n            <option value=\"100\">FIT</option>\r\n            <option value=\"200\">FILL</option>\r\n          </select>\r\n          <button onClick={this.zoomIn}>+</button>\r\n        </div>\r\n        <div>\r\n          <label for=\"img\">Upload image</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"img\"\r\n            name=\"img\"\r\n            accept=\"image/*\"\r\n            onChange={this.onImageChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <a\r\n            download={\"image.png\"}\r\n            href={this.state.href}\r\n            onClick={(e) => this.download(e)}\r\n          >\r\n            Download\r\n          </a>\r\n        </div>\r\n        <TwitterPicker\r\n          color={this.state.backgroundColor}\r\n          onChange={this.onColorChange}\r\n        />\r\n        <div>\r\n          <canvas\r\n            id=\"canvas\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              border: \"2px solid black\",\r\n              margin: \"auto\"\r\n            }}\r\n            ref={this.container}\r\n          ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import Editor from \"./editor\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}